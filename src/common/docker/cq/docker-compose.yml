version: '3'

services:

  proxy:
    container_name: proxy
    image: httpd:2.2.34-alpine
    restart: always
    env_file: ./common.env
    environment:
      no_proxy: redmine,rocketchat,sonarqube,subversion
    ports:
      - "80:80"
    volumes:
      - ./httpd.conf:/usr/local/apache2/conf/httpd.conf
    depends_on:
      - redmine
      - rocketchat
      - sonarqube
      - subversion
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  subversion:
    container_name: subversion
    restart: always
    env_file: ./common.env
    build:
      context: ./dockerfiles/subversion
    environment:
    - SVN_REPO=repo
    volumes:
      - /data/svn:/var/svn
      - ./svn/etc/apache2/conf.d/:/etc/apache2/conf.d/

  redmine:
    container_name: redmine
    image: redmine:3.3.4-passenger
    restart: always
    env_file: ./common.env
    environment:
      REDMINE_DB_POSTGRES: redmine-db
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine
      REDMINE_RELATIVE_URL_ROOT: /redmine
    volumes:
      - /data/redmine-files:/usr/src/redmine/files
      - /data/redmine-plugins:/usr/src/redmine/plugins
    depends_on:
      - redmine-db
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  redmine-db:
    container_name: redmine-db
    image: postgres:9.5.7-alpine
    restart: always
    env_file: ./common.env
    environment:
      POSTGRES_USER: redmine
      POSTGRES_PASSWORD: redmine
    volumes:
      - /data/redmine-db:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  rocketchat:
    container_name: rocketchat
    image: rocket.chat:2.0.0
    restart: always
    env_file: ./common.env
    environment:
      MONGO_URL: mongodb://rocketchat-db:27017/rocketchat
      MONGO_OPLOG_URL: mongodb://rocketchat-db:27017/local
      ROOT_URL: <ブラウザからrocketchatにアクセスする場合のURL>
    volumes:
      - /data/rocketchat:/app/uploads
    depends_on:
      - rocketchat-db
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  rocketchat-db:
    container_name: rocketchat-db
    image: mongo:3.6.9
    restart: always
    env_file: ./common.env
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    volumes:
      - /data/rocketchat-db:/data/db
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:3.6.9
    command: 'bash -c "for i in `seq 1 30`; do mongo rocketchat-db/rocketchat --eval \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"'
    depends_on:
      - rocketchat-db

  sonarqube:
    container_name: sonarqube
    image: sonarqube:6.7.5-alpine
    restart: always
    env_file: ./common.env
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonar
    volumes:
      - ./sonar.properties:/opt/sonarqube/conf/sonar.properties
      - /data/sonarqube/data:/opt/sonarqube/data
      - /data/sonarqube/extensions:/opt/sonarqube/extensions
      - /data/sonarqube/bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    depends_on:
      - sonarqube-db
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  sonarqube-db:
    container_name: sonarqube-db
    image: postgres:9.5.7-alpine
    restart: always
    env_file: ./common.env
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - /data/sonarqube-db:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "10"
